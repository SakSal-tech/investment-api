### User API HTTP Requests

# Get all users
GET http://localhost:8080/api/users

# Get user by username
GET http://localhost:8080/api/users/{{username}}

# Get user by email
GET http://localhost:8080/api/users/email/{{email}}

# Search user by username or email
GET http://localhost:8080/api/users/search?username={{username}}&email={{email}}

# Get all active users
GET http://localhost:8080/api/users/active

# User login
POST http://localhost:8080/api/users/login
Content-Type: application/x-www-form-urlencoded

username={{username}}&password={{password}}

# Generate password reset token
POST http://localhost:8080/api/users/reset-token
Content-Type: application/x-www-form-urlencoded

username={{username}}

# Find user by reset token
GET http://localhost:8080/api/users/reset-token/{{token}}

# Reset user password
POST http://localhost:8080/api/users/reset-password
Content-Type: application/x-www-form-urlencoded

username={{username}}&newPassword={{newPassword}}&resetToken={{resetToken}}

# Create a new user
POST http://localhost:8080/api/users
Content-Type: application/json

{
  "username": "{{username}}",
  "email": "{{email}}",
  "rawPassword": "{{password}}",
  "isActive": true
}

# Update an existing user
PUT http://localhost:8080/api/users/{{username}}
Content-Type: application/json

{
  "email": "{{email}}",
  "rawPassword": "{{password}}",
  "isActive": true
}

# Delete a user
DELETE http://localhost:8080/api/users/{{username}}

# Reset login (request password reset token after failed login attempts)
POST http://localhost:8080/api/users/reset-token
Content-Type: application/x-www-form-urlencoded

username={{username}}
